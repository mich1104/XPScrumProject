/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dk.cphbusiness.xpscrumproject;

import java.awt.Color;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dennis
 */
public class Gui extends javax.swing.JFrame {

    
    ControllerInterface control;
    DefaultListModel poolA = new DefaultListModel();
    DefaultListModel poolB = new DefaultListModel();
    DefaultListModel poolUn = new DefaultListModel();
    DefaultTableModel studentModel;
    MyNewCellRenderer cellRender;
    /**
     * Creates new form Gui
     */
    public Gui() {
        control = new Controller();
        initComponents();
        cellRender = new MyNewCellRenderer();
        setjList();
    }
    
    
    public void colorTableRow(){
//        for (int i = 0; i < jTableResult.getRowCount(); i++) {
                for (int j = 0; j < jTableResult.getColumnCount(); j++) {
                    jTableResult.getColumnModel().getColumn(j).setCellRenderer(cellRender);
                    
                }
//        }

    }
    
    public void getCalculatedStudents(){
        studentModel = (DefaultTableModel) jTableResult.getModel();
        List<Student> student = control.calculate();
        studentModel.setRowCount(student.size());
        jTableResult.setAutoCreateRowSorter(true);
        for (int i = 0; i < student.size(); i++) {
            jTableResult.setValueAt(student.get(i).getName(), i, 0);
            jTableResult.setValueAt(student.get(i).getFirstPriority()[0], i, 1);
            jTableResult.setValueAt(student.get(i).getFirstPriority()[1], i, 2);
            jTableResult.setValueAt(student.get(i).getSecondPriority()[0], i, 3);
            jTableResult.setValueAt(student.get(i).getSecondPriority()[1], i, 4);
            int[] grades = student.get(i).getGrades();
            String grade = grades[0]+"."+grades[1];
            jTableResult.setValueAt(grade, i, 5);            
        }
        colorTableRow();
    }
    
    public void setjList(){
        poolA.removeAllElements();
        poolB.removeAllElements();
        poolUn.removeAllElements();
        List<Subject> poolAList = control.getPoolAList();
        System.out.println("pool A = "+control.getPoolAList().size());
        for (int i = 0; i < poolAList.size(); i++) {
            poolA.addElement(poolAList.get(i));
        }
        List<Subject> poolBList = control.getPoolBList();
        for (int i = 0; i < poolBList.size(); i++) {
            poolB.addElement(poolBList.get(i));
        }
        List<Subject> poolUnList = control.getUnassignedList();
        for (int i = 0; i < poolUnList.size(); i++) {
            poolUn.addElement(poolUnList.get(i));
        }
        jListPoolA.setModel(poolA);
        jListPoolB.setModel(poolB);
        jListUn.setModel(poolUn);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jListPoolA = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListPoolB = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListUn = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableResult = new javax.swing.JTable();
        jButtonSubmit = new javax.swing.JButton();
        jButtonRTLeft = new javax.swing.JButton();
        jButtonLTRight = new javax.swing.JButton();
        jButtonRemove = new javax.swing.JButton();
        jButtonToPoolA = new javax.swing.JButton();
        jButtonToPoolB = new javax.swing.JButton();
        jLabelPoolA = new javax.swing.JLabel();
        jLabelPoolB = new javax.swing.JLabel();
        JListUn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jListPoolA.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListPoolA);

        jListPoolB.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jListPoolB);

        jListUn.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jListUn);

        jTableResult.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Navn", "First Prio 1", "First Prio 2", "Second Prio 1", "Second Prio 2", "Tilfredshed"
            }
        ));
        jScrollPane4.setViewportView(jTableResult);

        jButtonSubmit.setText("Submit pools");

        jButtonRTLeft.setText("<--");
        jButtonRTLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRTLeftActionPerformed(evt);
            }
        });

        jButtonLTRight.setText("-->");
        jButtonLTRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLTRightActionPerformed(evt);
            }
        });

        jButtonRemove.setText("Remove");
        jButtonRemove.setMaximumSize(new java.awt.Dimension(80, 25));
        jButtonRemove.setMinimumSize(new java.awt.Dimension(80, 25));
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        jButtonToPoolA.setText("<-- POOL A");
        jButtonToPoolA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonToPoolAActionPerformed(evt);
            }
        });

        jButtonToPoolB.setText("<-- POOL B");
        jButtonToPoolB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonToPoolBActionPerformed(evt);
            }
        });

        jLabelPoolA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPoolA.setText("Pool A");

        jLabelPoolB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPoolB.setText("Pool B");

        JListUn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JListUn.setText("Unassigned");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSubmit)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelPoolA, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButtonLTRight, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButtonRTLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabelPoolB, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonToPoolA)
                            .addComponent(jButtonToPoolB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JListUn, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(19, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPoolA, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelPoolB, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(JListUn, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addComponent(jButtonToPoolA)
                            .addGap(30, 30, 30)
                            .addComponent(jButtonToPoolB))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jButtonRTLeft)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonLTRight)
                        .addGap(27, 27, 27)
                        .addComponent(jButtonRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSubmit))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonToPoolAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonToPoolAActionPerformed
        List<Subject> unList = jListUn.getSelectedValuesList();
        if(unList.isEmpty()){
        }else{
            for (int i = 0; i < unList.size(); i++) {
                Subject subject = control.removeFromUnassigned((Subject)unList.get(i));
                control.addtoPoolA(subject);
                
            }
            setjList();
            getCalculatedStudents();
        }
    }//GEN-LAST:event_jButtonToPoolAActionPerformed

    private void jButtonToPoolBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonToPoolBActionPerformed
        List unList = jListUn.getSelectedValuesList();
        if(unList.isEmpty()){
        }else{
            for (int i = 0; i < unList.size(); i++) {
                Subject subject = control.removeFromUnassigned((Subject)unList.get(i));
                control.addtoPoolB(subject);
                
            }
        }
        setjList();
        getCalculatedStudents();
    }//GEN-LAST:event_jButtonToPoolBActionPerformed

    private void jButtonRTLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRTLeftActionPerformed
        List bList = jListPoolB.getSelectedValuesList();
        if(bList.isEmpty()){
        }else{
            for (int i = 0; i < bList.size(); i++) {
                Subject subject = control.removeFromPoolB((Subject)bList.get(i));
                control.addtoPoolA(subject);
                
            }
        }
        setjList();
        getCalculatedStudents();
    }//GEN-LAST:event_jButtonRTLeftActionPerformed

    private void jButtonLTRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLTRightActionPerformed
        List aList = jListPoolA.getSelectedValuesList();
        if(aList.isEmpty()){
        }else{
            for (int i = 0; i < aList.size(); i++) {
                Subject subject = control.removeFromPoolA((Subject)aList.get(i));
                control.addtoPoolB(subject);
                
            }
        }
        setjList();
        getCalculatedStudents();
    }//GEN-LAST:event_jButtonLTRightActionPerformed

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        System.out.println(jListPoolA.getSelectedIndex());
        System.out.println(jListPoolB.getSelectedIndex());
        if(jListPoolA.getSelectedIndex() != -1){
        List aList = jListPoolA.getSelectedValuesList();
            for (int i = 0; i < aList.size(); i++) {
                Subject subject = control.removeFromPoolA((Subject)aList.get(i));
                control.addToUnassigned(subject);
            }
        }
        if(jListPoolB.getSelectedIndex() != -1){
        List bList = jListPoolB.getSelectedValuesList();
            for (int i = 0; i < bList.size(); i++) {
                Subject subject = control.removeFromPoolB((Subject)bList.get(i));
                control.addToUnassigned(subject);
            }
        }
       setjList();
       getCalculatedStudents();
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JListUn;
    private javax.swing.JButton jButtonLTRight;
    private javax.swing.JButton jButtonRTLeft;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonSubmit;
    private javax.swing.JButton jButtonToPoolA;
    private javax.swing.JButton jButtonToPoolB;
    private javax.swing.JLabel jLabelPoolA;
    private javax.swing.JLabel jLabelPoolB;
    private javax.swing.JList jListPoolA;
    private javax.swing.JList jListPoolB;
    private javax.swing.JList jListUn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTableResult;
    // End of variables declaration//GEN-END:variables
}
